name: Test, Install and Auto-release DTO-lib

on:
  push:
    branches: [master]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN

      - name: Test and Install
        run: mvn -B clean install
        working-directory: ./lna-session-dto

      - name: Get current version
        id: get_version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
        working-directory: ./lna-session-dto

      - name: Set new version
        id: set_version
        run: |
          CURRENT_VERSION=${{ steps.get_version.outputs.version }}
          # Remove -SNAPSHOT if present
          VERSION_WITHOUT_SNAPSHOT=${CURRENT_VERSION%-SNAPSHOT}
          # Split the version by dots
          IFS='.' read -ra VERSION_PARTS <<< "$VERSION_WITHOUT_SNAPSHOT"
          # Increment the patch version (last number)
          ((VERSION_PARTS[2]++))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          # Set the new version
          mvn versions:set -DnewVersion=$NEW_VERSION
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        working-directory: ./lna-session-dto
        shell: bash

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit new version
        run: |
          git add ./lna-session-dto/pom.xml
          git commit -m "chore: Release version ${{ steps.set_version.outputs.new_version }}"
          git tag -a "v${{ steps.set_version.outputs.new_version }}" -m "Release v${{ steps.set_version.outputs.new_version }}"
          git push origin master --tags

      # Deploy to GitHub Packages
      - name: Publish to GitHub Packages
        run: mvn -B deploy -DskipTests
        working-directory: ./lna-session-dto
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}